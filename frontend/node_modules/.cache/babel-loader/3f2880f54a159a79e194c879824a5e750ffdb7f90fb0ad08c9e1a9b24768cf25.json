{"ast":null,"code":"import React,{useState,useEffect,useContext}from\"react\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import Autocomplete,{createFilterOptions}from\"@material-ui/lab/Autocomplete\";import CircularProgress from\"@material-ui/core/CircularProgress\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";import ButtonWithSpinner from\"../ButtonWithSpinner\";import ContactModal from\"../ContactModal\";import toastError from\"../../errors/toastError\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{Grid,ListItemText,MenuItem,Select}from\"@material-ui/core\";import{toast}from\"react-toastify\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const filter=createFilterOptions({trim:true});const NewTicketModal=_ref=>{var _user$queues;let{modalOpen,onClose,initialContact}=_ref;const[options,setOptions]=useState([]);const[loading,setLoading]=useState(false);const[searchParam,setSearchParam]=useState(\"\");const[selectedContact,setSelectedContact]=useState(null);const[selectedQueue,setSelectedQueue]=useState(\"\");const[newContact,setNewContact]=useState({});const[contactModalOpen,setContactModalOpen]=useState(false);const{user}=useContext(AuthContext);useEffect(()=>{if((initialContact===null||initialContact===void 0?void 0:initialContact.id)!==undefined){setOptions([initialContact]);setSelectedContact(initialContact);}},[initialContact]);useEffect(()=>{if(!modalOpen||searchParam.length<3){setLoading(false);return;}setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchContacts=async()=>{try{const{data}=await api.get(\"contacts\",{params:{searchParam}});setOptions(data.contacts);setLoading(false);}catch(err){setLoading(false);toastError(err);}};fetchContacts();},500);return()=>clearTimeout(delayDebounceFn);},[searchParam,modalOpen]);const handleClose=()=>{onClose();setSearchParam(\"\");setSelectedContact(null);};const handleSaveTicket=async contactId=>{if(!contactId)return;if(selectedQueue===\"\"&&user.profile!=='admin'){toast.error(\"Selecione uma fila\");return;}setLoading(true);try{const queueId=selectedQueue!==\"\"?selectedQueue:null;const{data:ticket}=await api.post(\"/tickets\",{contactId:contactId,queueId,userId:user.id,status:\"open\"});onClose(ticket);}catch(err){toastError(err);}setLoading(false);};const handleSelectOption=(e,newValue)=>{if(newValue!==null&&newValue!==void 0&&newValue.number){setSelectedContact(newValue);}else if(newValue!==null&&newValue!==void 0&&newValue.name){setNewContact({name:newValue.name});setContactModalOpen(true);}};const handleCloseContactModal=()=>{setContactModalOpen(false);};const handleAddNewContactTicket=contact=>{handleSaveTicket(contact.id);};const createAddContactOption=(filterOptions,params)=>{const filtered=filter(filterOptions,params);if(params.inputValue!==\"\"&&!loading&&searchParam.length>=3){filtered.push({name:\"\".concat(params.inputValue)});}return filtered;};const renderOption=option=>{if(option.number){return\"\".concat(option.name,\" - \").concat(option.number);}else{return\"\".concat(i18n.t(\"newTicketModal.add\"),\" \").concat(option.name);}};const renderOptionLabel=option=>{if(option.number){return\"\".concat(option.name,\" - \").concat(option.number);}else{return\"\".concat(option.name);}};const renderContactAutocomplete=()=>{if(initialContact===undefined||initialContact.id===undefined){return/*#__PURE__*/_jsx(Grid,{xs:12,item:true,children:/*#__PURE__*/_jsx(Autocomplete,{fullWidth:true,options:options,loading:loading,clearOnBlur:true,autoHighlight:true,freeSolo:true,clearOnEscape:true,getOptionLabel:renderOptionLabel,renderOption:renderOption,filterOptions:createAddContactOption,onChange:(e,newValue)=>handleSelectOption(e,newValue),renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,label:i18n.t(\"newTicketModal.fieldLabel\"),variant:\"outlined\",autoFocus:true,onChange:e=>setSearchParam(e.target.value),onKeyPress:e=>{if(loading||!selectedContact)return;else if(e.key===\"Enter\"){handleSaveTicket(selectedContact.id);}},InputProps:{...params.InputProps,endAdornment:/*#__PURE__*/_jsxs(React.Fragment,{children:[loading?/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:20}):null,params.InputProps.endAdornment]})}})})});}return null;};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ContactModal,{open:contactModalOpen,initialValues:newContact,onClose:handleCloseContactModal,onSave:handleAddNewContactTicket}),/*#__PURE__*/_jsxs(Dialog,{open:modalOpen,onClose:handleClose,children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"form-dialog-title\",children:i18n.t(\"newTicketModal.title\")}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:/*#__PURE__*/_jsxs(Grid,{style:{width:300},container:true,spacing:2,children:[renderContactAutocomplete(),/*#__PURE__*/_jsx(Grid,{xs:12,item:true,children:/*#__PURE__*/_jsx(Select,{fullWidth:true,displayEmpty:true,variant:\"outlined\",value:selectedQueue,onChange:e=>{setSelectedQueue(e.target.value);},MenuProps:{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"left\"},getContentAnchorEl:null},renderValue:()=>{if(selectedQueue===\"\"){return\"Selecione uma fila\";}const queue=user.queues.find(q=>q.id===selectedQueue);return queue.name;},children:((_user$queues=user.queues)===null||_user$queues===void 0?void 0:_user$queues.length)>0&&user.queues.map((queue,key)=>/*#__PURE__*/_jsx(MenuItem,{dense:true,value:queue.id,children:/*#__PURE__*/_jsx(ListItemText,{primary:queue.name})},key))})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,color:\"secondary\",disabled:loading,variant:\"outlined\",children:i18n.t(\"newTicketModal.buttons.cancel\")}),/*#__PURE__*/_jsx(ButtonWithSpinner,{variant:\"contained\",type:\"button\",disabled:!selectedContact,onClick:()=>handleSaveTicket(selectedContact.id),color:\"primary\",loading:loading,children:i18n.t(\"newTicketModal.buttons.ok\")})]})]})]});};export default NewTicketModal;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}