{"ast":null,"code":"import React,{useContext,useState}from\"react\";import{Stepper,Step,StepLabel,Button,Typography,CircularProgress}from\"@material-ui/core\";import{Formik,Form}from\"formik\";import AddressForm from\"./Forms/AddressForm\";import PaymentForm from\"./Forms/PaymentForm\";import ReviewOrder from\"./ReviewOrder\";import CheckoutSuccess from\"./CheckoutSuccess\";import api from\"../../services/api\";import toastError from\"../../errors/toastError\";import{toast}from\"react-toastify\";import{AuthContext}from\"../../context/Auth/AuthContext\";import validationSchema from\"./FormModel/validationSchema\";import checkoutFormModel from\"./FormModel/checkoutFormModel\";import formInitialValues from\"./FormModel/formInitialValues\";import useStyles from\"./styles\";import Invoices from\"../../pages/Financeiro\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CheckoutPage(props){const steps=[\"Dados\",\"Personalizar\",\"Revisar\"];const{formId,formField}=checkoutFormModel;const classes=useStyles();const[activeStep,setActiveStep]=useState(1);const[datePayment,setDatePayment]=useState(null);const[invoiceId,setinvoiceId]=useState(props.Invoice.id);const currentValidationSchema=validationSchema[activeStep];const isLastStep=activeStep===steps.length-1;const{user}=useContext(AuthContext);function _renderStepContent(step,setFieldValue,setActiveStep,values){switch(step){case 0:return/*#__PURE__*/_jsx(AddressForm,{formField:formField,values:values,setFieldValue:setFieldValue});case 1:return/*#__PURE__*/_jsx(PaymentForm,{formField:formField,setFieldValue:setFieldValue,setActiveStep:setActiveStep,activeStep:step,invoiceId:invoiceId,values:values});case 2:return/*#__PURE__*/_jsx(ReviewOrder,{});default:return/*#__PURE__*/_jsx(\"div\",{children:\"Not Found\"});}}async function _submitForm(values,actions){try{const plan=JSON.parse(values.plan);const newValues={firstName:values.firstName,lastName:values.lastName,address2:values.address2,city:values.city,state:values.state,zipcode:values.zipcode,country:values.country,useAddressForPaymentDetails:values.useAddressForPaymentDetails,nameOnCard:values.nameOnCard,cardNumber:values.cardNumber,cvv:values.cvv,plan:values.plan,price:plan.price,users:plan.users,connections:plan.connections,invoiceId:invoiceId};const{data}=await api.post(\"/subscription\",newValues);setDatePayment(data);actions.setSubmitting(false);setActiveStep(activeStep+1);toast.success(\"Assinatura realizada com sucesso!, aguardando a realização do pagamento\");}catch(err){toastError(err);}}function _handleSubmit(values,actions){if(isLastStep){_submitForm(values,actions);}else{setActiveStep(activeStep+1);actions.setTouched({});actions.setSubmitting(false);}}function _handleBack(){setActiveStep(activeStep-1);}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Typography,{component:\"h1\",variant:\"h4\",align:\"center\",children:\"Falta pouco!\"}),/*#__PURE__*/_jsx(Stepper,{activeStep:activeStep,className:classes.stepper,children:steps.map(label=>/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:label})},label))}),/*#__PURE__*/_jsx(React.Fragment,{children:activeStep===steps.length?/*#__PURE__*/_jsx(CheckoutSuccess,{pix:datePayment}):/*#__PURE__*/_jsx(Formik,{initialValues:{...user,...formInitialValues},validationSchema:currentValidationSchema,onSubmit:_handleSubmit,children:_ref=>{let{isSubmitting,setFieldValue,values}=_ref;return/*#__PURE__*/_jsxs(Form,{id:formId,children:[_renderStepContent(activeStep,setFieldValue,setActiveStep,values),/*#__PURE__*/_jsxs(\"div\",{className:classes.buttons,children:[activeStep!==1&&/*#__PURE__*/_jsx(Button,{onClick:_handleBack,className:classes.button,children:\"VOLTAR\"}),/*#__PURE__*/_jsxs(\"div\",{className:classes.wrapper,children:[activeStep!==1&&/*#__PURE__*/_jsx(Button,{disabled:isSubmitting,type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.button,children:isLastStep?\"PAGAR\":\"PRÓXIMO\"}),isSubmitting&&/*#__PURE__*/_jsx(CircularProgress,{size:24,className:classes.buttonProgress})]})]})]});}})})]});}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}