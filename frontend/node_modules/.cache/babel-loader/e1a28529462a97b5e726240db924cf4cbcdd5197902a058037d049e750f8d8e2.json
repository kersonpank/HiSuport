{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{Button,TextField,DialogContent,DialogActions,Grid}from'@material-ui/core';import PropType from'prop-types';import Dialog from'../Dialog';import*as Yup from\"yup\";import{Formik,Form,Field}from\"formik\";import{i18n}from'../../translate/i18n';import{makeStyles}from'@material-ui/core/styles';import ButtonWithSpinner from'../ButtonWithSpinner';import{AuthContext}from\"../../context/Auth/AuthContext\";import{isNil,isObject,has,get}from'lodash';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const MessageSchema=Yup.object().shape({shortcode:Yup.string().min(3,\"Too Short!\").max(50,\"Too Long!\").required(\"Required\"),message:Yup.string().min(3,\"Too Short!\").max(1000,\"Too Long!\").required(\"Required\")});const useStyles=makeStyles(theme=>({root:{'& .MuiTextField-root':{margin:theme.spacing(1),width:'350px'}},list:{width:'100%',maxWidth:'350px',maxHeight:'200px',backgroundColor:theme.palette.background.paper},inline:{width:'100%'}}));function QuickMessageDialog(props){const classes=useStyles();const initialMessage={id:null,shortcode:'',message:''};const{modalOpen,saveMessage,editMessage,onClose,messageSelected}=props;const[dialogOpen,setDialogOpen]=useState(false);const[message,setMessage]=useState(initialMessage);const[loading,setLoading]=useState(false);const{user}=useContext(AuthContext);useEffect(()=>{verifyAndSetMessage();setDialogOpen(modalOpen);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[modalOpen]);useEffect(()=>{verifyAndSetMessage();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[messageSelected]);const messageSelectedIsValid=()=>{return isObject(messageSelected)&&has(messageSelected,'id')&&!isNil(get(messageSelected,'id'));};const verifyAndSetMessage=()=>{if(messageSelectedIsValid()){const{id,message,shortcode}=messageSelected;setMessage({id,message,shortcode});}else{setMessage(initialMessage);}};const handleClose=()=>{onClose();setLoading(false);};const handleSave=async values=>{if(messageSelectedIsValid()){editMessage({...messageSelected,...values,userId:user.id});}else{saveMessage({...values,userId:user.id});}handleClose();};return/*#__PURE__*/_jsx(Dialog,{title:\"Mensagem R\\xE1pida\",modalOpen:dialogOpen,onClose:handleClose,children:/*#__PURE__*/_jsx(Formik,{initialValues:message,enableReinitialize:true,validationSchema:MessageSchema,onSubmit:(values,actions)=>{setLoading(true);setTimeout(()=>{handleSave(values);actions.setSubmitting(false);},400);},children:_ref=>{let{touched,errors}=_ref;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(DialogContent,{className:classes.root,dividers:true,children:/*#__PURE__*/_jsxs(Grid,{direction:\"column\",container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Field,{as:TextField,name:\"shortcode\",label:i18n.t(\"quickMessages.dialog.shortcode\"),error:touched.shortcode&&Boolean(errors.shortcode),helperText:touched.shortcode&&errors.shortcode,variant:\"outlined\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Field,{as:TextField,name:\"message\",rows:6,label:i18n.t(\"quickMessages.dialog.message\"),multiline:true,error:touched.message&&Boolean(errors.message),helperText:touched.message&&errors.message,variant:\"outlined\"})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,color:\"primary\",children:\"Cancelar\"}),/*#__PURE__*/_jsx(ButtonWithSpinner,{loading:loading,color:\"primary\",type:\"submit\",variant:\"contained\",autoFocus:true,children:\"Salvar\"})]})]});}})});}QuickMessageDialog.propType={modalOpen:PropType.bool,onClose:PropType.func};export default QuickMessageDialog;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}